import {useGenerateEntitySchema} from "utils/forms/useGenerateEntitySchema";

import {useGetAllTruckOwners} from "../../truck_owners/list/useGetAllTruckOwners";

export const useGetTruckMetaData = () => {

  const {data: owners, loading: ownersLoading} = useGetAllTruckOwners();
  const truckFormFields = [
    {
      name: "unit_number",
      type: "text",
      placeholder: "Enter Unit Number",
      label: "Unit Number",
      isRequired: true,
      group: "General",
    },
    {
      name: "type",
      type: "text",
      placeholder: "Enter Type",
      label: "Type",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "start_date",
      type: "date",
      placeholder: "Enter Start Date",
      label: "Start Date",
      isRequired: false,
      group: "General",
    },
    {
      name: "end_date",
      type: "date",
      placeholder: "Enter End Date",
      label: "End Date",
      isRequired: false,
      group: "General",
    },
    {
      name: "division",
      type: "text",
      placeholder: "Enter Division",
      label: "Division",
      isRequired: false,
      group: "General",
    },
    {
      name: "statement_type",
      type: "text",
      placeholder: "Enter Statement Type",
      label: "Statement Type",
      isRequired: false,
      group: "General",
    },
    {
      name: "make",
      type: "text",
      placeholder: "Enter Make",
      label: "Make",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "model",
      type: "text",
      placeholder: "Enter Model",
      label: "Model",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "color",
      type: "text",
      placeholder: "Enter Color",
      label: "Color",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "year",
      type: "number",
      placeholder: "Enter Year",
      label: "Year",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "vin_number",
      type: "text",
      placeholder: "Enter Vin Number",
      label: "Vin #",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "plates_number",
      type: "text",
      placeholder: "Enter Plate Number",
      label: "Plate #",
      isRequired: true,
      group: "Truck Info",
    },

    {
      name: "owner",
      type: "select",
      placeholder: "Select Owner",
      label: "Owner",
      isRequired: true,
      options: owners?.map((owner) => ({
        label: owner?.display_name,
        value: owner.id,
      })),
      group: "Owner Info"
    },
    {
      name: "street",
      type: "text",
      placeholder: "Enter Street",
      label: "Street",
      isRequired: true,
      group: "Owner Info",
    },
    {
      name: "fuel_card_number",
      type: "text",
      placeholder: "Enter Fuel Card Number",
      label: "Fuel Card Number",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "fuel_type",
      type: "text",
      placeholder: "Enter Fuel Type",
      label: "Fuel Type",
      isRequired: false,
      group: "Truck Info",
    },
    {
      name: "ipass_number",
      type: "text",
      placeholder: "Enter Ipass Number",
      label: "Ipass Number",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "best_pass_number",
      type: "text",
      placeholder: "Enter Best Pass Number",
      label: "Best Pass Number",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "prepass_ezpass",
      type: "text",
      placeholder: "Enter Prepass Ezpass",
      label: "Prepass Ezpass",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "engine_serial_number",
      type: "text",
      placeholder: "Enter Engine Serial Number",
      label: "Engine Serial Number",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "tire_size",
      type: "text",
      placeholder: "Enter Tire Size",
      label: "Tire Size",
      isRequired: true,
      group: "Truck Info",
    },
    {
      name: "last_odometer_reading",
      type: "text",
      placeholder: "Enter Last Odometer Reading",
      label: "Last Odometer Reading",
      isRequired: true,
      group: "Odometer",
    },
    {
      name: "last_odometer_date",
      type: "date",
      placeholder: "Enter Last Odometer Date",
      label: "Last Odometer Date",
      isRequired: false,
      group: "Odometer",
    },
    {
      name: "estimated_odometer",
      type: "text",
      placeholder: "Enter Estimated Odometer",
      label: "Estimated Odometer",
      isRequired: true,
      group: "Odometer",
    },

    {
      name: "dot_inspection_expiration",
      type: "date",
      placeholder: "Enter Dot Inspection Expiration",
      label: "Dot Inspection Expiration",
      isRequired: false,
      group: "Safety",
    },
    {
      name: "plates_expiration_date",
      type: "date",
      placeholder: "Enter Plates Expiration Date",
      label: "Plates Expiration Date",
      isRequired: false,
      group: "Safety",
    },
    {
      name: "insurance_expiration_date",
      type: "date",
      placeholder: "Enter Insurance Expiration Date",
      label: "Insurance Expiration Date",
      isRequired: false,
      group: "Safety",
    },
    {
      name: "insurance_value",
      type: "number",
      placeholder: "Enter Insurance Value",
      label: "Insurance Value",
      isRequired: true,
      group: "Safety",
    },
    {
      name: "escrow_starting_balance",
      type: "number",
      placeholder: "Enter Escrow Starting Balance",
      label: "Escrow Starting Balance",
      isRequired: true,
      group: "Safety",
    },
    {
      name: "escrow_account_balance",
      type: "number",
      placeholder: "Enter Escrow Account Balance",
      label: "Escrow Account Balance",
      isRequired: true,
      group: "Safety",
    },

    {
      name: "ifta_expiration_date",
      type: "date",
      placeholder: "Enter Ifta Expiration Date",
      label: "Ifta Expiration Date",
      isRequired: false,
      group: "IFTA",
    },
    {
      name: "ny_permit_number",
      type: "text",
      placeholder: "Enter Ny Permit Number",
      label: "Ny Permit Number",
      isRequired: true,
      group: "Highway Use Tax",
    },
    {
      name: "gross_weight",
      type: "text",
      placeholder: "Enter Gross Weight",
      label: "Gross Weight",
      isRequired: true,
      group: "Highway Use Tax",
    },
    {
      name: "unloaded_weight",
      type: "text",
      placeholder: "Enter Unloaded Weight",
      label: "Unloaded Weight",
      isRequired: true,
      group: "Highway Use Tax",
    },
    {
      name: "number_of_axles",
      type: "number",
      placeholder: "Enter Number Of Axles",
      label: "Number Of Axles",
      isRequired: true,
      group: "Highway Use Tax",
    },
    {
      name: "dispatcher",
      type: "text",
      placeholder: "Enter Dispatcher",
      label: "Dispatcher",
      isRequired: false,
      group: "Dispatch",
    },
    {
      name: "group",
      type: "text",
      placeholder: "Enter Group",
      label: "Group",
      isRequired: false,
      group: "Dispatch",
    },
    {
      name: "category",
      type: "text",
      placeholder: "Enter Category",
      label: "Category",
      isRequired: false,
      group: "Dispatch",
    },
    {
      name: "gps_type",
      type: "text",
      placeholder: "Enter GPS Type",
      label: "GPS Type",
      isRequired: false,
      group: "GPS",
    },
    {
      name: "gps_device_id",
      type: "text",
      placeholder: "Enter GPS Device ID",
      label: "GPS Device ID",
      isRequired: true,
      group: "GPS",
    },
    {
      name: "comments",
      type: "text",
      placeholder: "Enter Comments",
      label: "Comments",
      isRequired: false,
      group: "General",
    },

    {
      name: "ifta_handled_by_company",
      type: "checkbox",
      placeholder: "IFTA Handled By Company",
    },
    {name: "custom_warning", type: "checkbox", placeholder: "Custom Warning"},
    {name: "company_owned", type: "checkbox", placeholder: "Company Owned"},
    {name: "leased_from", type: "checkbox", placeholder: "Leased From"},
    {name: "leased_to", type: "checkbox", placeholder: "Leased To"},
    {name: "deduct_tolls", type: "checkbox", placeholder: "Deduct Tolls"},
    {name: "deduct_fuel", type: "checkbox", placeholder: "Deduct Fuel"},
    // {name: "is_deleted", type: "checkbox", placeholder: "Is Deleted"},
    {name: "is_active", type: "checkbox", placeholder: "Is Active"},
  ];

  const {generateSchema} = useGenerateEntitySchema();

  const truckSchema = generateSchema(truckFormFields);

  const truckSchemaGroups = [
    "General",
    "Truck Info",
    "Odometer",
    "Owner Info",
    "Safety",
    "IFTA",
    "Highway Use Tax",
    "Dispatch",
    "GPS",
  ];
  return {
    owners,
    ownersLoading,
    truckFormFields,
    truckSchema,
    truckSchemaGroups,
  };
};
